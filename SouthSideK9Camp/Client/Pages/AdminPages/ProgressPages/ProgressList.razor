@page "/admin/report-list";

@layout AdminLayout

@inject SouthSideK9CampHttpClient HttpClient
@inject NavigationManager NavigationManager

<MudContainer MaxWidth="MaxWidth.Medium" Class="mt-16 mb-16">
    <MudStack>

        @* Breadcrumbs *@
        <MudBreadcrumbs Items="_breadcrumbs" />

        <MudText Typo="Typo.h3">Progress Reports</MudText>

        @* toolbar *@
        <MudPaper>
            <MudToolBar>
                <MudStack Row Spacing="0" Justify="Justify.FlexStart">

                    <MudIconButton OnClick="@_PreviousYear" Icon="@Icons.Material.Filled.NavigateBefore"></MudIconButton>
                    <MudDatePicker Variant="Variant.Outlined" Label="Year" @bind-Date="_year" PickerMonthChanged="@_RefreshDataAsync" OpenTo="OpenTo.Year" DateFormat="yyyy" FixMonth="1" FixDay="1" Margin="Margin.Dense" ShowToolbar="false" />
                    <MudIconButton OnClick="@_NextYear" Icon="@Icons.Material.Filled.NavigateNext"></MudIconButton>

                </MudStack>
            </MudToolBar>
        </MudPaper>

        @* table *@
        @foreach (Shared.Reservation reservation in _reservations)
        {
            <MudTable Items="@reservation.Dogs" Hover="true">

                @* table head *@
                <ToolBarContent>
                    <MudStack Row Justify="Justify.Center" AlignItems="AlignItems.Center">

                        <MudText Typo="Typo.h6" Class="mr-3">@reservation.Name</MudText>

                        <MudStack Row AlignItems="AlignItems.Center">

                            <MudIcon Icon="@Icons.Material.Filled.DateRange" Size="Size.Small" />

                            <MudStack Spacing="0">
                                <MudText Typo="Typo.caption">@reservation.StartingDate?.ToString("dd MMMM yyyy")</MudText>
                                <MudText Typo="Typo.caption">@reservation.EndingDate?.ToString("dd MMMM yyyy")</MudText>
                            </MudStack>

                        </MudStack>

                    </MudStack>
                </ToolBarContent>

                <HeaderContent>
                    <MudTh>Name</MudTh>
                    <MudTh>Status</MudTh>
                    <MudTh>Score</MudTh>
                    <MudTh></MudTh>
                </HeaderContent>

                <RowTemplate>

                    @* dog data *@
                    <MudTd DataLabel="Name">
                        <MudStack Row>

                            <MudAvatar>
                                <MudImage ObjectFit="ObjectFit.Cover" Src="@context.AvatarURL" />
                            </MudAvatar>

                            <MudStack Spacing="0">
                                <MudText Typo="Typo.h6">@context.Name</MudText>
                                <MudText Typo="Typo.caption">@context.Breed</MudText>
                            </MudStack>

                        </MudStack>
                    </MudTd>

                    @* report status *@
                    <MudTd DataLabel="Status">
                        <MudChip T="string" Variant="Variant.Text">@context.Contract.TrainingType</MudChip>
                    </MudTd>

                    <MudTd DataLabel="Score">
                        <MudRating MaxValue="5" ReadOnly
                            SelectedValue="@(((context.ProgressReports.OrderByDescending(r => r.ID).FirstOrDefault()?.ScoreObedience ?? 0)
                            + (context.ProgressReports.OrderByDescending(r => r.ID).FirstOrDefault()?.ScoreFocus ?? 0)
                            + (context.ProgressReports.OrderByDescending(r => r.ID).FirstOrDefault()?.ScoreProtection ?? 0)) / 3)" />
                    </MudTd>

                    @* actions *@
                    <MudTd>
                        <MudStack Row Justify="Justify.FlexEnd">
                            <MudButton OnClick="@(() => _Open(context.ID))" Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Info">Open</MudButton>
                        </MudStack>
                    </MudTd>

                </RowTemplate>

                <PagerContent>
                    <MudTablePager />
                </PagerContent>

            </MudTable>
        }

    </MudStack>
</MudContainer>

@code
{
    private List<Shared.Reservation> _reservations = new();

    // Breadcrumbs
    private List<BreadcrumbItem> _breadcrumbs = new()
    {
        new BreadcrumbItem("Progress Reports", "/admin/report-list", false, Icons.Material.Filled.Flag),
    };

    protected override async Task OnInitializedAsync()
    {
        await _RefreshDataAsync();
    }

    // year filter
    private DateTime? _year = DateTime.UtcNow;

    private async Task _NextYear()
    {
        _year = _year?.AddYears(1);
        await _RefreshDataAsync();
    }

    private async Task _PreviousYear()
    {
        _year = _year?.AddYears(-1);
        await _RefreshDataAsync();
    }

    // open dog contract
    private void _Open(int dogID)
    {
        NavigationManager.NavigateTo($"/admin/report/{dogID}");
    }

    // refresh
    private async Task _RefreshDataAsync()
    {
        _reservations = await HttpClient.Reservation.GetAsync();
        StateHasChanged();

        await HttpClient.Reservation.FetchAsync();
        _reservations = await HttpClient.Reservation.GetAsync();

        // filter year
        _reservations = _reservations.Where(r => r.StartingDate?.Year == _year?.Year).ToList();
    }
}
